{"version":3,"sources":["components/Toggle/toggle.js","components/Selector/selector.js","pages/TogglePage/togglePage.js","pages/SelectorPage/example.js","pages/SelectorPage/example2.js","pages/SelectorPage/SelectorPage.js","App.js","serviceWorker.js","index.js"],"names":["Toggle","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","open","setState","isOpen","close","toggle","state","initialIsOpen","inherits","createClass","key","value","children","Component","Selector","editSelect","isSelect","selects","newState","validate","keysSelected","getKeysSelected","onChange","select","unselect","keys","filter","initialList","defaultProps","ToggleButton","_ref","onClickOn","onClickOff","isActive","react_default","a","createElement","className","classname","is-active","onClick","TogglePage","apply","arguments","toggle_Toggle","isInitialOpen","_ref2","togglePage_ToggleButton","validateSelection","_objectSpread2","prevKeySelected","objectSpread","defineProperty","Example","selector_Selector","tab1","name","tab2","tab3","tab4","bloomer_min","item","left","number","center1","center2","center3","right","Example2","isCurrent","SelectorPage","href","target","rel","isColor","example_Example","example2_Example2","Layout","location","pages","selector","Page","search","split","App","BrowserRouter","Switch","Route","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27607fc3.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Toggle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: props.initialIsOpen,\n    };\n  }\n\n  open = () => {\n    this.setState({ isOpen: true });\n  };\n\n  close = () => {\n    this.setState({ isOpen: false });\n  };\n\n  toggle = () => {\n    this.setState(state => ({\n      isOpen: !state.isOpen,\n    }));\n  };\n\n  render() {\n    const { isOpen } = this.state;\n    return this.props.children({\n      isOpen,\n      close: this.close,\n      open: this.open,\n      toggle: this.toggle,\n    });\n  }\n}\n\nToggle.propTypes = {\n  children: PropTypes.func,\n  initialIsOpen: PropTypes.bool,\n};\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Selector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selects: props.initialList,\n    };\n  }\n\n  editSelect = (key, isSelect) => {\n    const { selects } = this.state;\n    const { validate } = this.props;\n    const keysSelected = this.getKeysSelected();\n    const newState = {\n      selects: validate({ selects, key, isSelect, keysSelected }),\n    };\n\n    this.setState(newState, () => this.props.onChange(newState));\n  }\n\n  toggle = key => {\n    this.editSelect(key, !this.state.selects[key].isSelect);\n  }\n\n  select = key => {\n    this.editSelect(key, true);\n  };\n\n  unselect = key => {\n    this.editSelect(key, false);\n  };\n\n  getKeysSelected = () => {\n    const { selects } = this.state;\n    return Object.keys(selects).filter(key => selects[key].isSelect);\n  }\n\n  render() {\n    const { selects } = this.state;\n    return this.props.children({\n      selects,\n      select: this.select,\n      unselect: this.unselect,\n      toggle: this.toggle,\n    });\n  }\n}\n\nSelector.propTypes = {\n  children: PropTypes.func.isRequired,\n  validate: PropTypes.func,\n  onChange: PropTypes.func,\n  initialList: PropTypes.objectOf(PropTypes.shape({\n    isSelect: PropTypes.bool.isRequired,\n    //can receive any props else\n    anyProp: () => true\n  })).isRequired,\n};\n\nSelector.defaultProps = {\n  validate: (state) => state,\n  onChange: () => {},\n  initialList: {},\n};\n","import React, { Component } from 'react';\nimport classname from \"classnames\";\n\nimport './toggle.css';\nimport { Toggle } from '../../components';\n\nconst ToggleButton = ({onClickOn, onClickOff, isActive}) => (\n  <div className=\"button-toggleable\">\n    <button className={classname({'is-active': isActive})} onClick={onClickOn}>On</button>\n    <button className={classname({'is-active': !isActive})} onClick={onClickOff}>Off</button>\n  </div>\n)\n\nexport class TogglePage extends Component {\n  render() {\n    return (\n      <div className=\"explanation\">\n        <h2>Toggle with render props</h2>\n        <summary>\n          Toggle is a sort of bahavior used in a lot of components like; modals, toggle buttons, tooltips, or where we have two options either true or false basically\n        </summary>\n          <pre className=\"lang-javascript prettyprint\">\n              {`\nclass Toggle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: props.initialIsOpen,\n    };\n  }\n\n  open = () => {\n    this.setState({ isOpen: true });\n  };\n\n  close = () => {\n    this.setState({ isOpen: false });\n  };\n\n  toggle = () => {\n    this.setState(state => ({\n      isOpen: !state.isOpen,\n    }));\n  };\n\n  render() {\n    const { isOpen } = this.state;\n    return this.props.children({\n      isOpen,\n      close: this.close,\n      open: this.open,\n      toggle: this.toggle,\n    });\n  }\n}\n                `}\n          </pre>\n        <h2>Toggle button example</h2>\n        <summary>\n          In this case we can reuse the toggle behavior and make our component separatly\n        </summary>\n        <article className=\"example\">\n          <Toggle isInitialOpen={false}>\n            {({isOpen, open, close}) => (\n              <ToggleButton onClickOn={open} onClickOff={close} isActive={isOpen} />\n            )}\n          </Toggle>\n          <pre className=\"lang-javascript prettyprint\">\n            {`\n    const ToggleButton = ({onClickOn, onClickOff, isActive}) => (\n      <div className=\"button-toggleable\">\n        <button className={classname({'is-active': isActive})} onClick={onClickOn}>On</button>\n        <button className={classname({'is-active': !isActive})} onClick={onClickOff}>Off</button>\n      </div>\n    )\n\n    <Toggle isInitialOpen={false}>\n      {({isOpen, open, close}) => (\n        <ToggleButton onClickOn={open} onClickOff={close} isActive={isOpen} />\n      )}\n    </Toggle>\n            `}\n          </pre>\n        </article>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Tabs, Tab, TabList, TabLink } from 'bloomer';\n\nimport { Selector } from '../../components';\n\nconst validateSelection = ({selects, key, isSelect, keysSelected}) => {\n  const prevKeySelected = keysSelected[0];\n  return key !== prevKeySelected ? {\n    ...selects,\n    [key]: {...selects[key], isSelect},\n    [prevKeySelected]: {\n      ...selects[prevKeySelected],\n      isSelect: false\n    }\n  } : selects;\n}\n\nexport const Example = () => {\n  const tabsItems = {\n    tab1: {\n      isSelect: true,\n      name: 'music',\n    },\n    tab2: {\n      isSelect: false,\n      name: 'sports',\n    },\n    tab3: {\n      isSelect: false,\n      name: 'hobbies',\n    },\n    tab4: {\n      isSelect: false,\n      name: 'other things',\n    }\n  }\n\n  return (\n    <Selector initialList={tabsItems} validate={validateSelection}>\n      {({selects, select}) => (\n        <Tabs>\n          <TabList>\n            <Tab isActive={selects.tab1.isSelect}>\n              <TabLink onClick={() => select('tab1')}>\n                <span>{selects.tab1.name}</span>\n              </TabLink>\n            </Tab>\n            <Tab isActive={selects.tab2.isSelect}>\n              <TabLink onClick={() => select('tab2')}>\n                <span>{selects.tab2.name}</span>\n              </TabLink>\n            </Tab>\n            <Tab isActive={selects.tab3.isSelect}>\n              <TabLink onClick={() => select('tab3')}>\n                  <span>{selects.tab3.name}</span>\n              </TabLink>\n            </Tab>\n            <Tab isActive={selects.tab4.isSelect}>\n              <TabLink onClick={() => select('tab4')}>\n                <span>{selects.tab4.name}</span>\n              </TabLink>\n            </Tab>\n          </TabList>\n        </Tabs>\n      )}\n    </Selector>\n  );\n};\n","import React from 'react';\nimport { Pagination, PageList, Page, PageLink, PageEllipsis } from 'bloomer';\n\nimport { Selector } from '../../components';\n\nconst validateSelection = ({selects, key, isSelect, keysSelected}) => {\n  const prevKeySelected = keysSelected[0];\n  const item = selects[key];\n  return key !== prevKeySelected ? {\n    left: {number: item.number - 2, isSelect: false},\n    center1: {number: item.number - 1, isSelect: false},\n    center2: {number: item.number, isSelect: true},\n    center3: {number: item.number + 1, isSelect: false},\n    right: {number: item.number + 2, isSelect: false},\n  } : selects;\n}\n\nexport const Example2 = () => {\n  const tabsItems = {\n    left: {\n      isSelect: true,\n      number: 54,\n    },\n    center1: {\n      isSelect: false,\n      number: 55,\n    },\n    center2: {\n      isSelect: false,\n      number: 56,\n    },\n    center3: {\n      isSelect: false,\n      number: 57,\n    },\n    right: {\n      isSelect: false,\n      number: 58,\n    }\n  }\n\n  return (\n    <Selector initialList={tabsItems} validate={validateSelection}>\n      {({selects, select}) => (\n        <Pagination>\n          <PageList>\n              <Page><PageLink onClick={() => select('left')}>{selects.left.number}</PageLink></Page>\n              <Page><PageEllipsis /></Page>\n              <Page><PageLink onClick={() => select('center1')}>{selects.center1.number}</PageLink></Page>\n              <Page><PageLink isCurrent onClick={() => select('center2')}>{selects.center2.number}</PageLink></Page>\n              <Page><PageLink onClick={() => select('center3')}>{selects.center3.number}</PageLink></Page>\n              <Page><PageEllipsis /></Page>\n              <Page><PageLink onClick={() => select('right')}>{selects.right.number}</PageLink></Page>\n          </PageList>\n        </Pagination>\n      )}\n    </Selector>\n  );\n};\n","import React from 'react';\nimport { Box, Tag, Panel, PanelHeading, PanelBlock } from 'bloomer';\n\nimport { Example } from './example';\nimport { Example2 } from './example2';\n\nexport const SelectorPage = () => (\n  <div className=\"explanation\">\n    <h2 className=\"subtitle is-4\">Selector component</h2>\n    <Box>\n      <summary>\n        Selector is a wrapper component, it uses <a href=\"https://reactjs.org/docs/render-props.html\" target=\"_blank\" rel=\"noopener noreferrer\">render props pattern</a> in order to handle logic about multiples options<br/>\n      </summary>\n    </Box>\n    <h3 className=\"subtitle is-5\">Step one</h3>\n    <summary>\n      Create a object schema as follow, it is an object of objects in order to access to them with dot notation <Tag isColor='light'>selects.myCustomKey</Tag> also you can add more fields and they just require in every object must contain the isSelected key of type boolean, that is it\n    </summary>\n    <pre className=\"lang-javascript prettyprint\">\n      {`\nexport const tabsOptions = () => {\n  const tabsItems = {\n    tab1: {\n      isSelect: true,\n      name: 'music',\n    },\n    tab2: {\n      isSelect: false,\n      name: 'sports',\n    },\n    tab3: {\n      isSelect: false,\n      name: 'hobbies',\n    },\n    tab4: {\n      isSelect: false,\n      name: 'other things',\n    }\n  }\n      `}\n    </pre>\n    <h3 className=\"subtitle is-5\"> Step two </h3>\n    <summary>\n      it is necesary validating what we hope about Select does, i mean,\n      if prop validation is <i>null</i> then the Select does anything since Select only handle the state but\n      it not contain any validation by default, keep in mind it allow you keep an clean interface\n      and dont have validations you dont need also it is simple to undertand.\n    </summary>\n    <pre className=\"lang-javascript prettyprint\">\n      {`\nconst validateSelection = ({selects, key, isSelect, keysSelected}) => {\n  const prevKeySelected = keysSelected[0];\n  return key !== prevKeySelected ? {\n    ...selects,\n    [key]: {...selects[key], isSelect},\n    [prevKeySelected]: {\n      ...selects[prevKeySelected],\n      isSelect: false\n    }\n  } : selects;\n}\n      `}\n    </pre>\n    <h3 className=\"subtitle is-5\">Step three</h3>\n    <summary>\n      so now, we have an schema and validate function, they are params for Selector component, pass this props in Select Component and render it as follow.\n    </summary>\n    <pre className=\"lang-javascript prettyprint\">\n      {`\n<Selector initialList={tabsOptions} validate={validateSelection}>\n  {({selects, select}) => (\n    <Tabs>\n      <TabList>\n        <Tab isActive={selects.tab1.isSelect}>\n          <TabLink onClick={() => select('tab1')}>\n            <span>{selects.tab1.name}</span>\n          </TabLink>\n        </Tab>\n        <Tab isActive={selects.tab2.isSelect}>\n          <TabLink onClick={() => select('tab2')}>\n            <span>{selects.tab2.name}</span>\n          </TabLink>\n        </Tab>\n        <Tab isActive={selects.tab3.isSelect}>\n          <TabLink onClick={() => select('tab3')}>\n              <span>{selects.tab3.name}</span>\n          </TabLink>\n        </Tab>\n        <Tab isActive={selects.tab4.isSelect}>\n          <TabLink onClick={() => select('tab4')}>\n            <span>{selects.tab4.name}</span>\n          </TabLink>\n        </Tab>\n      </TabList>\n    </Tabs>\n  )}\n</Selector>\n      `}\n    </pre>\n    <h3 className=\"subtitle is-5\">It should looks like this</h3>\n    <div className=\"example\">\n      <Example />\n    </div>\n    <summary>\n      In these cases we use <a href=\"https://bloomer.js.org\" target=\"_blank\" rel=\"noopener noreferrer\">Bloomer</a> in order to create Tabs with React.\n    </summary>\n    <summary>Another example, now with pagination component, see full code <a href=\"https://github.com/GeDiez/frontend-playground/tree/master/repositories/react-stuffs/src/pages/SelectorPage/example2\">here</a></summary>\n    <div className=\"example\">\n      <Example2 />\n    </div>\n    <h3 className=\"subtitle is-5\">API Reference</h3>\n    <Panel className=\"is-inline-block\">\n      <PanelHeading>API summary for render function</PanelHeading>\n      <PanelBlock>\n        <table>\n          <thead>\n            <tr>\n              <th>name</th>\n              <th>params</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>selects <Tag>object</Tag></td>\n              <td>-</td>\n              <td>same object as initialList prop but contains the current state</td>\n            </tr>\n            <tr>\n              <td>select <br/> <Tag isColor=\"danger\">function</Tag></td>\n              <td>key <Tag isColor=\"info\">string</Tag></td>\n              <td>mark as select the item with the given key</td>\n            </tr>\n            <tr>\n              <td>unselect <br/> <Tag isColor=\"danger\">function</Tag></td>\n              <td>key <br/><Tag isColor=\"info\">string</Tag></td>\n              <td>mark as unselect the item with the given key</td>\n            </tr>\n            <tr>\n              <td>toggle <br/><Tag isColor=\"danger\">function</Tag></td>\n              <td>key <br/> <Tag isColor=\"info\">string</Tag></td>\n              <td>mark as select/unselect the item with the given key</td>\n            </tr>\n\n          </tbody>\n        </table>\n      </PanelBlock>\n    </Panel>\n  </div>\n);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport './App.css';\n\nimport { TogglePage, SelectorPage } from \"./pages\";\n\nconst Layout = ({location}) => {\n  const pages = {\n    toggle: TogglePage,\n    selector: SelectorPage,\n  }\n\n  const paramPage = location.search.split('=')[1];\n  const Page = pages[paramPage] || pages.toggle;\n\n  return (\n    <div className=\"layout\">\n      <header>\n        <h1 className=\"title\">React Examples</h1>\n        <a href=\"/frontend-playground\">Inicio</a>\n      </header>\n      <section className=\"body\">\n        <Page></Page>\n      </section>\n      <footer>\n        make by @gibran\n      </footer>\n    </div>\n    );\n  }\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" component={Layout}></Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}